@using BlazorRecipeApp.Mm.Identity.Models
@using BlazorRecipeApp.Mm.Identity.Services
@inject NavigationManager NavManager
@inject MmStateProvider AuthStateProvider

<div class="row justify-content-center mt-4">
    <div class="col-11 col-md-7 col-lg-5 d-flex flex-column align-items-center"
         style="border-style: solid; border-width: 1px; border-radius: 0px; border-color: lightgray; max-width: 25rem; padding: 1rem 0 1rem 0;">

        <div class="row w-100 justify-content-center py-2">
            <p class="text-center font-weight-bold mb-0" style="font-size: 2rem">Login</p>
        </div>

        <div class="row w-100 justify-content-center" style="height: 75px;">
            <img src="images/user_login.png" style="width: 5rem; height: 5rem; border-radius: 50%;" />
        </div>
        <EditForm Model="LoginRequest" OnValidSubmit="OnSubmit">
            <DataAnnotationsValidator />
            <div class="row justify-content-center py-4 w-100 m-0">
                <div class="row w-75 m-1">
                    <InputText type="email" @bind-Value="LoginRequest.Email" placeholder="E-Mail" class="form-control login-input w-100"></InputText>
                    <span><ValidationMessage For="@(() => LoginRequest.Email)" /></span>
                </div>

                <div class="row w-75 m-1">
                    <InputText type="password" @bind-Value="LoginRequest.Password" placeholder="Password" class="form-control login-input w-100"></InputText>
                    <span><ValidationMessage For="@(() => LoginRequest.Password)" /></span>
                </div>

                <div class="row form-check w-75 m-1">
                    <InputCheckbox class="form-check-input" @bind-Value="@LoginRequest.RememberMe" />
                    <label class="form-check-label">Remember Me</label>
                </div>

                <div class="row w-75 justify-content-center m-2">
                    <button type="submit" class="btn btn-primary noradius">Login</button>
                    <span><label class="text-danger">@ErrorMessage</label></span>
                </div>
            </div>
            <div class="row justify-content-center w-100 m-0">
                <p style="font-size: smaller;">
                    Don't have an account yet?
                    <a href="#">Register now</a>
                </p>
            </div>
        </EditForm>
    </div>
</div>

@code {
    public LoginRequest LoginRequest { get; set; } = new LoginRequest();
    public string ErrorMessage { get; set; }

    async Task OnSubmit()
    {
        ErrorMessage = null;
        try
        {
            await AuthStateProvider.Login(LoginRequest);
            NavManager.NavigateTo("/");
        }
        catch (Exception ex)
        {
            ErrorMessage = ex.Message;
        }
    }
}
